on: push
name: Install and Test
jobs:
  build:
    name: Build Node ${{ matrix.node_version }} - ffmpeg ${{ matrix.ffmpeg_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            node_version: 14
            ffmpeg_version: 4.4
          - os: windows-latest
            node_version: 14
            ffmpeg_version: 4.4
          - os: macos-latest
            node_version: 14
            ffmpeg_version: 4.4
          - os: ubuntu-latest
            node_version: 12
            ffmpeg_version: 4.4
          - os: ubuntu-latest
            node_version: 16
            ffmpeg_version: 4.4
          - os: ubuntu-latest
            node_version: 14
            ffmpeg_version: 4.1
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
      - uses: Iamshankhadeep/setup-ffmpeg@v1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ matrix.versionffmpeg_version }}
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ matrix.os }}-node-${{ matrix.node_version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-node-${{ matrix.node_version }}
      - run: npm ci
      - run: npx lerna bootstrap --ci
      - run: npm run build
      # We need to call bootstrap again to link the CLI
      # binary to allow `npx remotion`
      - run: npx lerna bootstrap --ci
      - run: npm test
